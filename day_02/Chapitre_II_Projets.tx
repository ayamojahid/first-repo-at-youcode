Chapitre II

Projets de programmation

1. Les livres sont identifiés par un Numéro International Normalisé du Livre
(ISBN). Les ISBN attribués après le 1er janvier 2007 contiennent 13 chiffres,
organisés en cinq groupes, par exemple, 978-0-393-97950-3.
Le premier groupe (le préfixe GS1) est actuellement soit 978, soit 979.
L'identifiant de groupe spécifie la langue ou le pays d'origine. Le code de l'éditeur
identifie l'éditeur (393 est le code pour W. W. Norton). Le numéro d'article est
attribué par l'éditeur pour identifier un livre spécifique (97950 est le code pour
ce livre). Un ISBN se termine par un chiffre de contrôle qui sert à vérifier
l'exactitude des chiffres précédents. Écrivez un programme qui décompose un
ISBN entré par l’utilisateur :
Entrez l'ISBN : 978-0-393-97950-3
Préfixe GS1 : 978
Identifiant de groupe : 0
Code de l'éditeur : 393
Numéro d'article : 97950
Chiffre de contrôle : 3
Note : Le nombre de chiffres dans chaque groupe peut varier ; vous ne pouvez
pas supposer que les groupes ont les longueurs indiquées dans cet exemple.
Testez votre programme avec de vrais ISBN (généralement trouvés sur la
quatrième de couverture d'un livre et sur la page de droit d'auteur).


2. Écrivez un programme qui demande à l'utilisateur d'entrer un nombre à deux
chiffres, puis affiche ce nombre avec ses chiffres inversés. Une session avec le
programme devrait ressembler à ceci :
Entrez un nombre à deux chiffres : 28
Le nombre inversé est : 82
Lisez le nombre en utilisant %d, puis décomposez-le en deux chiffres. Indice :
Si n est un entier, alors n % 10 est le dernier chiffre de n et n / 10 est n avec
le dernier chiffre supprimé.

9

Le tableau suivant présente les vols quotidiens d'une ville à une autre :

Heure de départ Heure d'arrivée
8h00 a.m. 10h16 a.m.
9h43 a.m. 11h52 a.m.
11h19 a.m. 1h31 p.m.
12h47 p.m. 3h00 p.m.
2h00 p.m. 4h08 p.m.
3h45 p.m. 5h55 p.m.
7h00 p.m. 9h20 p.m.
9h45 p.m. 11h58 p.m.
Écrivez un programme qui demande à l'utilisateur d'entrer une heure (exprimée
en heures et minutes, en utilisant l'horloge de 24 heures). Le programme doit
ensuite afficher les heures de départ et d'arrivée du vol dont l'heure de départ
est la plus proche de celle entrée par l'utilisateur.
Entrez une heure (24h) : 13:15
L'heure de départ la plus proche est 12:47 p.m., arrivant à 3:00
p.m.
Indice : Convertissez l'heure d'entrée en minutes depuis minuit, et comparez-la aux
heures de départ, également exprimées en minutes depuis minuit. Par exemple,
13:15 correspond à 13 x 60 + 15 = 795 minutes depuis minuit, ce qui est plus
proche de 12:47 p.m. (767 minutes depuis minuit) que de toute autre heure de
départ.

3. Écrivez un programme qui demande à l'utilisateur d'entrer deux dates et indique
ensuite quelle est la date la plus ancienne.
Entrez la première date (mm/jj/aa) : 3/6/08
Entrez la deuxième date (mm/jj/aa) : 5/17/07
5/17/07 est plus tôt que 3/6/08

4. En utilisant l'instruction switch, écrivez un programme qui convertit une note
numérique en une note littérale :
Entrez une note numérique : 84
Note littérale : B
Utilisez le barème suivant : A = 90–100, B = 80–89, C = 70–79, D = 60–69,
F = 0–59. Affichez un message d'erreur si la note est supérieure à 100 ou
inférieure à 0.

10
Indice : Décomposez la note en deux chiffres, puis utilisez une instruction switch
pour tester le chiffre des dizaines.


5. Écrivez un programme qui demande à l'utilisateur d'entrer deux entiers, puis
calcule et affiche leur plus grand commun diviseur (GCD) :

Entrez deux entiers : 12 28
Le plus grand commun diviseur est : 4
Indice : L'algorithme classique pour calculer le GCD, connu sous le nom
d'algorithme d'Euclide, fonctionne comme suit : Soient m et n des variables
contenant les deux nombres. Si n est égal à 0, arrêtez-vous : m contient le GCD.
Sinon, calculez le reste de la division de m par n. Copiez n dans m et copiez le reste
dans n. Répétez ensuite le processus, en commençant par tester si n est égal à 0.

6. Écrivez un programme qui demande à l'utilisateur d'entrer une fraction, puis
réduit cette fraction à sa plus simple expression :
Entrez une fraction : 6/12
Sous sa forme la plus simple : 1/2
Indice : Pour réduire une fraction à sa plus simple expression, commencez par
calculer le GCD du numérateur et du dénominateur. Ensuite, divisez le numérateur
et le dénominateur par ce GCD.

7. Écrivez un programme qui demande à l'utilisateur d'entrer un nombre n, puis
affiche tous les carrés pairs compris entre 1 et n. Par exemple, si l'utilisateur
entre 100, le programme devrait afficher :
4
16
36
64
100

8. Écrivez un programme qui traduit un numéro de téléphone alphabétique en sa
forme numérique :
Entrez un numéro de téléphone : CALLATT
2255288
(Si vous n'avez pas de téléphone à portée de main, voici la correspondance des lettres
sur les touches : 2=ABC, 3=DEF, 4=GHI, 5=JKL, 6=MNO, 7=PRS, 8=TUV,
9=WXY). Si le numéro de téléphone original contient des caractères non
alphabétiques (chiffres ou ponctuation, par exemple), laissez-les inchangés :

1
1

Entrez un numéro de téléphone : 1-800-COL-LECT
1-800-265-5328
Vous pouvez supposer que toutes les lettres saisies par l'utilisateur sont en
majuscules.

9. Dans le jeu de lettres SCRABBLE, les joueurs forment des mots à l'aide de
petites tuiles, chacune contenant une lettre et une valeur faciale. La valeur faciale
varie d'une lettre à l'autre, en fonction de sa rareté. (Voici les valeurs faciales : 1
: AEILNORSTU, 2 : DG, 3 : BCMP, 4 : FHVWY, 5 : K, 8 : JX, 10 : QZ). Écrivez
un programme qui calcule la valeur d'un mot en additionnant les valeurs de ses
lettres :
Entrez un mot : pitfall
Valeur Scrabble : 12
Votre programme doit accepter n'importe quel mélange de lettres majuscules et
minuscules dans le mot.
Indice : Utilisez la fonction de bibliothèque toupper.

10. Écrivez un programme qui affiche les valeurs de sizeof(int), sizeof(short),
sizeof(long), sizeof(float), sizeof(double) et sizeof(long double).